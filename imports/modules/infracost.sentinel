import "http"
import "json"
import "decimal"
import "tfplan/v2" as tfplan

projects = {
  "total_monthly_cost": func(token){
    return {
      "less_than_or_equal_to": func(i){
        return all as_json(tfplan.raw, token).projects as _, project {
          decimal.new(project.breakdown.totalMonthlyCost).float <= i
        }
      },
    }
  },
  "breakdown": func(token){
    return print(as_table(tfplan.raw, token))
  },
}

as_json = func(plan, token) {

  body = string(
    "--TerraformPlan\r\n" +
    "Content-Disposition: form-data; name=\"path\"; filename=\"plan.json\"\r\nContent-Type: \"application/json\"\r\n" +
    "\r\n" + json.marshal(plan) + "\r\n" +
    "--TerraformPlan\r\n" +
    "Content-Disposition: form-data; name=\"format\"\r\n" +
    "\r\njson\r\n" +
    "--TerraformPlan--")

  request = http.request("https://pricing.api.infracost.io/breakdown").
    with_header("x-api-key", token).
    with_header("Content-Type", "multipart/form-data;boundary=TerraformPlan").
    with_body(body)

  response = http.post(request)

  return json.unmarshal(response.body)
}

as_table = func(plan, token) {

  body = string(
    "--TerraformPlan\r\n" +
    "Content-Disposition: form-data; name=\"path\"; filename=\"plan.json\"\r\nContent-Type: \"application/json\"\r\n" +
    "\r\n" + json.marshal(plan) + "\r\n" +
    "--TerraformPlan\r\n" +
    "Content-Disposition: form-data; name=\"format\"\r\n" +
    "\r\ntable\r\n" +
    "--TerraformPlan--")

  request = http.request("https://pricing.api.infracost.io/breakdown").
    with_header("x-api-key", token).
    with_header("Content-Type", "multipart/form-data;boundary=TerraformPlan").
    with_body(body)

  response = http.post(request)

  print(response.body)

  return true
}
