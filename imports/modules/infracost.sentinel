import "http"
import "json"
import "decimal"
import "tfplan/v2" as tfplan

func estimate(token) {
	return {
		"data":    as_json(token),
		"summary": as_table(token),
	}
}

func estimates(input) {
	return {
		"less_than": func(i) {
			return to_float(input) < i
		},
		"less_than_or_equal_to": func(i) {
			return to_float(input) <= i
		},
		"greater_than": func(i) {
			return to_float(input) > i
		},
		"greater_than_or_equal_to": func(i) {
			return to_float(input) >= i
		},
	}
}

func as_json(token) {
  body = string(
    "--TerraformPlan\r\n" +
    "Content-Disposition: form-data; name=\"path\"; filename=\"plan.json\"\r\nContent-Type: \"application/json\"\r\n" +
    "\r\n" + json.marshal(tfplan.raw) + "\r\n" +
    "--TerraformPlan\r\n" +
    "Content-Disposition: form-data; name=\"format\"\r\n" +
    "\r\njson\r\n" +
    "--TerraformPlan--")

  request = http.request("https://pricing.api.infracost.io/breakdown").
    with_header("x-api-key", token).
    with_header("Content-Type", "multipart/form-data;boundary=TerraformPlan").
    with_body(body)

  response = http.post(request)

  return json.unmarshal(response.body)
}

func as_table(token) {
  body = string(
    "--TerraformPlan\r\n" +
    "Content-Disposition: form-data; name=\"path\"; filename=\"plan.json\"\r\nContent-Type: \"application/json\"\r\n" +
    "\r\n" + json.marshal(tfplan.raw) + "\r\n" +
    "--TerraformPlan\r\n" +
    "Content-Disposition: form-data; name=\"format\"\r\n" +
    "\r\ntable\r\n" +
    "--TerraformPlan--")

  request = http.request("https://pricing.api.infracost.io/breakdown").
    with_header("x-api-key", token).
    with_header("Content-Type", "multipart/form-data;boundary=TerraformPlan").
    with_body(body)

  response = http.post(request)

  return response.body
}

func to_float(s) {
	return decimal.new(s).float
}
